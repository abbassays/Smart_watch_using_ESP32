/*********
Code of displaying my image on SSD_1306
*********/

#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

static const uint8_t ali_map[] = {
  0x81, 0x5c, 0x67, 0xff, 	/*Color of index 0*/
  0xc0, 0xab, 0xbc, 0xff, 	/*Color of index 1*/

  0x15, 0x55, 0x02, 0x55, 0x5f, 0xbf, 0xff, 0xff, 0x00, 0x00, 0x01, 0x40, 0x00, 0xa0, 0x00, 0x40,  
  0x82, 0xa8, 0xd5, 0x2a, 0xb5, 0xd5, 0x7f, 0xff, 0x00, 0x80, 0x45, 0x50, 0x00, 0x20, 0x00, 0x90,  
  0x55, 0x55, 0x70, 0x55, 0x7f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x05, 0x60, 0x00, 0x00, 0x00, 0x48,  
  0x0a, 0xaa, 0xf5, 0x2d, 0x57, 0xeb, 0xff, 0xff, 0x00, 0x0a, 0x02, 0xbc, 0x00, 0x00, 0x00, 0x05,  
  0x57, 0xaa, 0xf8, 0x55, 0x6b, 0xff, 0xff, 0xff, 0x00, 0x05, 0x01, 0x56, 0x00, 0x00, 0x00, 0x00,  
  0x2a, 0xab, 0x7e, 0xae, 0xbe, 0x57, 0xff, 0xfe, 0x00, 0x00, 0x2a, 0xab, 0x80, 0x00, 0x00, 0x01,  
  0x53, 0xaa, 0xbd, 0x55, 0xdf, 0x5b, 0xff, 0xfa, 0x00, 0x00, 0x05, 0xa3, 0xe0, 0x00, 0x00, 0x00,  
  0x00, 0x75, 0xff, 0x6b, 0x57, 0xaa, 0xff, 0xf5, 0x00, 0x00, 0x00, 0x50, 0x50, 0x1e, 0x84, 0x00,  
  0x00, 0x05, 0x5f, 0xb5, 0xef, 0xf7, 0xbf, 0xca, 0x00, 0x00, 0x00, 0x55, 0xbf, 0xf5, 0x70, 0x00,  
  0x00, 0x00, 0xdf, 0xdf, 0x77, 0xff, 0xfc, 0x05, 0x00, 0x00, 0x00, 0x0a, 0x3f, 0xd5, 0x00, 0x00,  
  0x00, 0x00, 0x5d, 0xd7, 0xff, 0xfb, 0xf8, 0x12, 0x00, 0x00, 0x00, 0x06, 0xaf, 0x60, 0x00, 0x00,  
  0x00, 0x00, 0x37, 0xfb, 0x7f, 0xfe, 0x02, 0x0a, 0x00, 0x00, 0x01, 0x01, 0x55, 0x00, 0x00, 0x00,  
  0x00, 0x00, 0x2f, 0x7b, 0xff, 0xf8, 0x00, 0x12, 0x00, 0x00, 0x02, 0xc0, 0x55, 0x00, 0x00, 0x00,  
  0x00, 0x00, 0x0b, 0xfe, 0x84, 0x00, 0x05, 0x4a, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00, 0x00,  
  0x00, 0x00, 0x02, 0xbe, 0x10, 0x00, 0x20, 0x55, 0x20, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00,  
  0x00, 0x00, 0x01, 0x50, 0x00, 0x00, 0x95, 0x48, 0x04, 0x00, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x00,  
  0x00, 0x00, 0x00, 0xaa, 0xa8, 0x20, 0xa8, 0xaa, 0x02, 0x80, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00,  
  0x00, 0x00, 0x00, 0x54, 0x02, 0x42, 0x55, 0x54, 0x00, 0xa0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,  
  0x00, 0x00, 0x01, 0x28, 0x84, 0x81, 0x20, 0x02, 0x02, 0xa0, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,  
  0x00, 0x00, 0x01, 0x7d, 0x2b, 0xaa, 0x8a, 0xa9, 0x01, 0x50, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,  
  0x00, 0x00, 0x02, 0xdd, 0x5d, 0x55, 0x20, 0x02, 0x80, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,  
  0x40, 0x00, 0x01, 0xfb, 0xf7, 0xae, 0x9b, 0x55, 0x01, 0x50, 0x00, 0x00, 0x80, 0x00, 0x05, 0x00,  
  0x25, 0x00, 0x00, 0x3f, 0xef, 0x5d, 0x76, 0x92, 0x40, 0x10, 0x00, 0x00, 0x40, 0x00, 0x3f, 0x5b,  
  0x80, 0xa0, 0x00, 0xf7, 0xed, 0xaa, 0xfa, 0xab, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfa,  
  0x52, 0xa0, 0x00, 0xbf, 0xfa, 0xdd, 0xfb, 0xb7, 0x20, 0x08, 0x80, 0x00, 0x40, 0x00, 0xff, 0xff,  
  0xa8, 0xa8, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x54, 0x00, 0x00, 0x01, 0xff, 0xfd,  
  0xff, 0x78, 0x01, 0x7f, 0xff, 0xdf, 0xff, 0xff, 0x00, 0x05, 0x15, 0x00, 0x00, 0x01, 0xff, 0xfb,  
  0xfd, 0x5c, 0x00, 0xff, 0xff, 0xff, 0xf7, 0xff, 0x00, 0x00, 0x42, 0xd0, 0x00, 0x01, 0xff, 0xff,  
  0xf7, 0xfc, 0x01, 0x7f, 0xff, 0xff, 0x6f, 0xff, 0x00, 0x00, 0x15, 0x74, 0x00, 0x03, 0xff, 0xff,  
  0xfa, 0xae, 0x00, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x00, 0x00, 0x20, 0xae, 0x80, 0x03, 0xff, 0xff,  
  0xe8, 0x0b, 0x01, 0xff, 0xff, 0xfd, 0xff, 0xff, 0x00, 0x0a, 0x94, 0x77, 0xe8, 0x07, 0xff, 0xff,  
  0xa0, 0x00, 0x80, 0xff, 0xff, 0xff, 0xf7, 0xff, 0x00, 0x00, 0x20, 0x0b, 0xf8, 0x07, 0xfe, 0xbe,  
  0x40, 0x05, 0x01, 0xff, 0xff, 0xff, 0xdf, 0xff, 0x00, 0x0a, 0x94, 0x06, 0xfc, 0x0f, 0xe0, 0x0b,  
  0x80, 0x54, 0x89, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x2a, 0xaa, 0xbc, 0x0f, 0xa0, 0x2a,  
  0x00, 0x2f, 0x45, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x45, 0x54, 0x55, 0x7c, 0x0f, 0xd0, 0x00,  
  0x10, 0x07, 0x04, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x01, 0x11, 0x55, 0xab, 0xde, 0x06, 0x7c, 0x38,  
  0x00, 0x7f, 0x40, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x00, 0x02, 0x55, 0x4a, 0x7f, 0x01, 0xa8, 0x09,  
  0xc1, 0x5f, 0x24, 0x03, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0xfa, 0xb5, 0xff, 0xcc, 0xfa, 0x1b,  
  0xc0, 0x57, 0x40, 0x01, 0xff, 0xff, 0xff, 0xff, 0x08, 0x07, 0xfd, 0x55, 0x57, 0xcf, 0xf5, 0x1b,  
  0xd0, 0x2f, 0xc0, 0x00, 0x45, 0xff, 0xff, 0xff, 0xc2, 0x8f, 0xe7, 0x8a, 0xff, 0x47, 0x6f, 0xe7,  
  0xe1, 0x57, 0xc0, 0x00, 0x2b, 0x5f, 0xff, 0xff, 0xe0, 0x0f, 0xe3, 0xea, 0xff, 0xe7, 0xf7, 0xbf,  
  0xd5, 0x7f, 0xc0, 0x11, 0x5f, 0xff, 0xff, 0xff, 0xfe, 0x01, 0xf3, 0xf5, 0xae, 0x3f, 0xfb, 0x8f,  
  0xe1, 0x5f, 0x40, 0x05, 0x55, 0xff, 0xbf, 0xff, 0x7f, 0xd4, 0xf8, 0xfa, 0x2c, 0x3b, 0xfd, 0x5f,  
  0xd4, 0xff, 0xc0, 0x01, 0x7f, 0xff, 0xff, 0xff, 0xaf, 0xef, 0x77, 0xaf, 0xf0, 0x1f, 0xfe, 0x9f,  
  0xd5, 0x7f, 0x80, 0x81, 0xff, 0xff, 0xdf, 0xff, 0x07, 0xfa, 0x9f, 0x00, 0x00, 0x07, 0xff, 0x5f,  
  0xf5, 0x7f, 0x80, 0x46, 0x0f, 0xff, 0xf7, 0xff, 0x42, 0xff, 0x7f, 0xf0, 0x00, 0x01, 0xff, 0x5f,  
  0xe9, 0x7f, 0x80, 0x22, 0xaf, 0xff, 0xff, 0xff, 0x10, 0x1a, 0x7f, 0xdf, 0xf8, 0x01, 0xff, 0x5b,  
  0x04, 0xbf, 0x00, 0x95, 0xff, 0xff, 0xf7, 0xff, 0x40, 0x81, 0xff, 0x80, 0xa8, 0x08, 0xff, 0xbe,  
  0x2b, 0x7f, 0x03, 0xab, 0xff, 0xff, 0xff, 0xff, 0xa8, 0x23, 0xff, 0x2a, 0xb4, 0x0c, 0xff, 0x7f,  
  0xd4, 0x3f, 0x0f, 0x17, 0xbf, 0xff, 0xfd, 0xff, 0x55, 0x4f, 0xff, 0xd0, 0x0a, 0x0f, 0x7e, 0xff,  
  0xfe, 0x7f, 0x3f, 0xd7, 0x07, 0xff, 0xff, 0xff, 0xa5, 0x3f, 0xff, 0xa4, 0x04, 0x27, 0x7f, 0x06,  
  0xf0, 0xfe, 0xff, 0x54, 0x1f, 0xff, 0xff, 0xf7, 0xb8, 0xff, 0xff, 0xd7, 0xb8, 0x0b, 0x3f, 0xfd,  
  0x01, 0xfc, 0xff, 0xcc, 0x3f, 0xff, 0xff, 0xd7, 0x61, 0xff, 0xff, 0xe2, 0xd0, 0x07, 0x9f, 0xfe,  
  0xff, 0xf8, 0xff, 0x30, 0x3f, 0xff, 0xff, 0xfa, 0x03, 0xff, 0xff, 0xd5, 0x30, 0x0b, 0x8f, 0xff,  
  0xff, 0xf8, 0xff, 0xc0, 0x1f, 0xff, 0xff, 0xf5, 0x07, 0xff, 0xff, 0xea, 0x20, 0x07, 0x8f, 0xff,  
  0xff, 0xf0, 0x7f, 0xa1, 0x0f, 0xff, 0xff, 0xf2, 0x03, 0xff, 0xff, 0xff, 0xc0, 0x05, 0x87, 0xff,  
  0x57, 0xe0, 0x7f, 0xc2, 0x07, 0xff, 0xff, 0xf5, 0x01, 0xff, 0xfb, 0xff, 0xc0, 0x07, 0x83, 0xff,  
  0xff, 0xc0, 0x07, 0x88, 0x01, 0xff, 0xff, 0xea, 0x01, 0xff, 0xef, 0xd7, 0xc0, 0x01, 0x41, 0xff,  
  0xff, 0xc0, 0x02, 0x28, 0x01, 0xff, 0xff, 0xd5, 0x01, 0xff, 0xff, 0xd3, 0xf0, 0x01, 0x80, 0xff,  
  0xff, 0x00, 0x00, 0x20, 0x01, 0xff, 0xff, 0xaa, 0x00, 0x5f, 0xfc, 0x7f, 0xf8, 0x00, 0x00, 0x7f,  
  0xff, 0x00, 0x00, 0xa0, 0x01, 0xff, 0xff, 0x55, 0x00, 0x2f, 0xf0, 0xff, 0xfc, 0x00, 0x00, 0x3f,  
  0xf0, 0x00, 0x02, 0x80, 0x52, 0xff, 0xff, 0x4a, 0x00, 0x0a, 0x95, 0xff, 0xfe, 0x00, 0x00, 0x1f,  
  0xaa, 0xa0, 0x0a, 0x85, 0x05, 0x7f, 0xfc, 0x95, 0x00, 0x02, 0x7b, 0x7f, 0xfe, 0x00, 0x00, 0x0f,  
  0x54, 0x00, 0x14, 0x2a, 0xaa, 0xff, 0xed, 0x4a, 0x00, 0x03, 0xf8, 0xbf, 0xfe, 0x00, 0x00, 0x07,  
};
 
void setup() {
  Serial.begin(115200);
 
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  delay(2000); // Pause for 2 seconds
 
  // Clear the buffer.
  display.clearDisplay();
  
  // Draw bitmap on the screen
  display.drawBitmap(0, 0, ali_map, 128, 64, 1);
  display.display();
}
 
void loop() {
  
}